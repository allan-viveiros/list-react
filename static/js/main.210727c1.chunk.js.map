{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","newItem","list","key","value","this","setState","id","Math","random","slice","push","updatedList","filter","item","className","type","placeholder","onChange","e","updateInput","target","onClick","addItem","map","deleteItem","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPA8EeA,G,wDA1Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAO,CACVC,QAAS,GACTC,KAAM,IALS,E,wDAUPC,EAAKC,GACfC,KAAKC,SAAL,eACGH,EAAMC,M,gCAKT,IAAMH,EAAQ,CACZM,GAAI,EAAIC,KAAKC,SACbL,MAAOC,KAAKL,MAAMC,QAAQS,SAGtBR,EAAI,YAAOG,KAAKL,MAAME,MAE5BA,EAAKS,KAAKV,GAEVI,KAAKC,SAAS,CACZJ,OACAD,QAAQ,O,iCAKDM,GACT,IAEMK,EAFI,YAAOP,KAAKL,MAAME,MAEHW,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,KAEpDF,KAAKC,SAAS,CAACJ,KAAMU,M,+BAGb,IAAD,OACP,OACE,yBAAKG,UAAU,OAEX,0CACA,2BAAOC,KAAK,OACVC,YAAY,iBACZb,MAAOC,KAAKL,MAAMC,QAClBiB,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAY,UAAWD,EAAEE,OAAOjB,UAGtD,4BAAQW,UAAU,MAAMO,QAAS,kBAAM,EAAKC,YAA5C,SAEF,6BAEA,4BACGlB,KAAKL,MAAME,KAAKsB,KAAI,SAAAV,GACnB,OACE,wBAAIX,IAAKW,EAAKP,IACXO,EAAKV,MAEN,4BAAQW,UAAU,SAASO,QAAS,kBAAM,EAAKG,WAAWX,EAAKP,MAA/D,iB,GA/DEmB,cCGlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.210727c1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state= {\n      newItem: \"\",\n      list: []\n    }\n  }\n\n\n  updateInput(key, value) { \n    this.setState({\n      [key]: value\n    })\n  }\n\n  addItem(){\n    const newItem={\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }\n\n    const list = [...this.state.list];\n\n    list.push(newItem);\n\n    this.setState({\n      list,\n      newItem:\"\"\n    });\n  }\n\n\n  deleteItem(id){\n    const list = [...this.state.list];\n\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({list: updatedList})\n  }\n\n  render() {\n    return(\n      <div className=\"App\">\n        \n          <h2>To Do List</h2>\n          <input type=\"text\"\n            placeholder=\"type your text\"\n            value={this.state.newItem}\n            onChange={e => this.updateInput(\"newItem\", e.target.value)}\n          />\n\n          <button className=\"btn\" onClick={() => this.addItem()}> Add </button>\n        \n        <br />\n\n        <ul>\n          {this.state.list.map(item => {\n            return(\n              <li key={item.id}>\n                {item.value}\n\n                <button className=\"delete\" onClick={() => this.deleteItem(item.id)}> x </button>\n              </li>\n            )\n          })}\n        </ul>\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}